<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Processamento de Malote</title>
    <style>
      body {
        background-color: #f4fdf4; /* Verde claro */
        color: #2c3e50; /* Cinza escuro */
        font-family: Arial, sans-serif;
      }
      .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #ffffff; /* Branco */
        border: 1px solid #dfe6e9; /* Cinza claro */
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      h1,
      h2 {
        color: #27ae60; /* Verde escuro */
      }
      .form-group {
        margin-bottom: 20px;
      }
      .form-group label {
        display: block;
        margin-bottom: 5px;
        color: #27ae60; /* Verde escuro */
      }
      .form-group input,
      .form-group select {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
        border: 1px solid #dfe6e9; /* Cinza claro */
        border-radius: 4px;
      }
      .button-group button {
        padding: 10px 20px;
        margin-right: 10px;
        background-color: #27ae60; /* Verde escuro */
        color: #ffffff; /* Branco */
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      .button-group button:hover {
        background-color: #218c53; /* Verde mais escuro */
      }
      .payment-list {
        margin-top: 20px;
      }
      .payment-list table {
        width: 100%;
        border-collapse: collapse;
      }
      .payment-list th,
      .payment-list td {
        padding: 10px;
        border: 1px solid #dfe6e9; /* Cinza claro */
      }
      .payment-list th {
        background-color: #27ae60; /* Verde escuro */
        color: #ffffff; /* Branco */
      }
      .payment-list td {
        background-color: #f9f9f9; /* Branco */
      }
      .tabs {
        display: flex;
        cursor: pointer;
        margin-bottom: 20px;
      }
      .tab {
        flex: 1;
        padding: 10px;
        text-align: center;
        background-color: #27ae60; /* Verde escuro */
        color: #ffffff; /* Branco */
        border: 1px solid #dfe6e9; /* Cinza claro */
        border-bottom: none;
      }
      .tab.active {
        background-color: #218c53; /* Verde mais escuro */
      }
      .tab-content {
        display: none;
      }
      .tab-content.active {
        display: block;
      }
      .edit-icon {
        cursor: pointer;
        margin-left: 5px;
        color: #27ae60; /* Verde escuro */
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Processamento de Malote</h1>
      <div class="form-group">
        <label for="idMalote">ID do Malote:</label>
        <input
          type="text"
          id="idMalote"
          value="<%= malote.id_malote %>"
          disabled
        />
      </div>
      <div class="form-group">
        <label for="nomeFuncionario">Funcionário Responsável:</label>
        <input
          type="text"
          id="nomeFuncionario"
          value="<%= malote.nome_funcionario%>"
          disabled
        />
      </div>
      <div class="form-group">
        <label for="nomeEmpresa">Empresa:</label>
        <input
          type="text"
          id="nomeEmpresa"
          value="<%= malote.nome_cliente%>"
          disabled
        />
      </div>
      <div class="form-group">
        <label for="statusMalote">Status:</label>
        <input
          type="text"
          id="statusMalote"
          value="<%= malote.status%>"
          disabled
        />
      </div>
      <div class="form-group">
        <label for="valorTotal">Valor Total do Malote:</label>
        <input
          type="text"
          id="valorTotal"
          value="<%= malote.valor_declarado%>"
          disabled
        />
      </div>
      <div class="form-group">
        <label for="troco">Troco:</label>
        <input
          type="text"
          id="troco"
          value="<%= malote.valor_declarado %>"
          disabled
        />
      </div>
      <div class="tabs">
        <div class="tab active" data-tab="tab-1">
          Processamento de Código de Barras
        </div>
        <div class="tab" data-tab="tab-2">Preenchimento Manual</div>
        <div class="tab" data-tab="tab-3">PIX</div>
      </div>
      <div id="tab-1" class="tab-content active">
        <div class="button-group">
          <h1>Processamento de Código de Barras</h1>
          <button id="btnLerCodigo">Ler Código de Barras</button>
          <div id="codigoBarrasInputContainer" style="display: none">
            <label for="codigoBarrasInput">Código de Barras:</label>
            <input type="text" id="codigoBarrasInput" />
            <button id="processarCodigoBtn">Processar Código de Barras</button>
          </div>

          <div class="resultado" id="codigoBarrasInfo" style="display: none">
            <h2>Informações do Código de Barras</h2>
            <div class="form-group">
              <label for="codigoBanco">Código do Banco:</label>
              <input type="text" id="codigoBanco" disabled />
            </div>
            <div class="form-group">
              <label for="tipoConta">Tipo de Conta:</label>
              <select id="tipoConta" name="tipo_conta" disabled>
                <option value="Energia elétrica/Gás">
                  Energia elétrica/Gás
                </option>
                <option value="Saneamento">Saneamento</option>
                <option value="Prefeitura">Prefeitura</option>
                <option value="Telecomunicação">Telecomunicação</option>
                <option value="Carnê e Assemelhados">
                  Carnê e assemelhados
                </option>
                <option value="Órgão governamental">Órgão governamental</option>
                <option value="Multa de trânsito">Multa de trânsito</option>
              </select>
              <i class="edit-icon" id="editar-tipo">&#9998;</i>
            </div>
            <div class="form-group">
              <label for="dataVencimento">Data de Vencimento:</label>
              <input type="text" id="dataVencimento" disabled />
              <i class="edit-icon" id="editar-data">&#9998;</i>
            </div>
            <div class="form-group">
              <label for="valor">Valor:</label>
              <input type="text" id="valor" disabled />
            </div>
            <button id="confirmarDadosBtn">Confirmar Dados</button>
          </div>
        </div>
      </div>
      <div id="tab-2" class="tab-content">
        <div class="button-group">
          <h1>Preenchimento Manual</h1>
          <div class="form-group">
            <label for="tipoContaManual">Tipo de Conta:</label>
            <select id="tipoContaManual" name="tipo_conta">
              <option value="Energia elétrica/Gás">Energia elétrica/Gás</option>
              <option value="Saneamento">Saneamento</option>
              <option value="Prefeitura">Prefeitura</option>
              <option value="Telecomunicação">Telecomunicação</option>
              <option value="Carnê e Assemelhados">Carnê e assemelhados</option>
              <option value="Órgão governamental">Órgão governamental</option>
              <option value="Multa de trânsito">Multa de trânsito</option>
            </select>
          </div>
          <div class="form-group">
            <label for="codigoBancoManual">Código do Banco:</label>
            <input type="text" id="codigoBancoManual" />
          </div>
          <div class="form-group">
            <label for="dataVencimentoManual">Data de Vencimento:</label>
            <input type="date" id="dataVencimentoManual" />
          </div>
          <div class="form-group">
            <label for="valorManual">Valor:</label>
            <input type="text" id="valorManual" />
          </div>
          <button id="adicionarPagamentoManualBtn">
            Adicionar Pagamento Manual
          </button>
        </div>
      </div>
      <div id="tab-3" class="tab-content">
        <div class="button-group">
          <h1>Pagamento via PIX</h1>
        </div>
        <div class="form-group">
          <label for="valorPix">Valor do PIX:</label>
          <input type="text" id="valorPix" />
        </div>
        <div class="button-group">
          <button id="btnRegistrarPagamentoPix">
            Registrar Pagamento via PIX
          </button>
        </div>
      </div>
    </div>
    <div class="container payment-list">
      <h2>Pagamentos</h2>
      <table>
        <thead>
          <tr>
            <th>Tipo</th>
            <th>Código do Banco</th>
            <th>Data de Vencimento</th>
            <th>Valor</th>
          </tr>
        </thead>
        <tbody id="paymentTableBody"></tbody>
      </table>
      <br />

      <div class="form-group">
        <label for="obs">Observações:</label>
        <input type="text" id="observacao" />
      </div>
      <br /><br />
      <button id="btnRegistrarPagamentos">Processar malote</button>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Tabs
        const tabs = document.querySelectorAll(".tab");
        const tabContents = document.querySelectorAll(".tab-content");

        tabs.forEach((tab) => {
          tab.addEventListener("click", () => {
            tabs.forEach((t) => t.classList.remove("active"));
            tabContents.forEach((tc) => tc.classList.remove("active"));

            tab.classList.add("active");
            document
              .getElementById(tab.getAttribute("data-tab"))
              .classList.add("active");
          });
        });

        // Leitura de código de barras
        document
          .getElementById("btnLerCodigo")
          .addEventListener("click", function () {
            const inputContainer = document.getElementById(
              "codigoBarrasInputContainer"
            );
            inputContainer.style.display =
              inputContainer.style.display === "none" ? "block" : "none";
          });

        document
          .getElementById("processarCodigoBtn")
          .addEventListener("click", function () {
            let codigoBarras =
              document.getElementById("codigoBarrasInput").value;
            codigoBarras = codigoBarras.replace(/\./g, "");
            let tipoConta, dataVencimento, fatorVencimento, codigoBanco, valor;

            let troco = document.getElementById("troco").value;

            if (codigoBarras.length === 44) {
              if (codigoBarras[0] === "8") {
                if (codigoBarras[1] === "1") {
                  // Segmento 2 = conta de saneamento
                  tipoConta = "Prefeitura";
                } else if (codigoBarras[1] === "2") {
                  tipoConta = "Saneamento";
                } else if (codigoBarras[1] === "3") {
                  tipoConta = "Energia Elétrica/Gás";
                } else if (codigoBarras[1] === "4") {
                  tipoConta = "Telecomunicação";
                } else if (codigoBarras[1] === "5") {
                  tipoConta = "Órgão governamental";
                } else if (codigoBarras[1] === "6") {
                  tipoConta = "Carnê e assemelhados";
                } else if (codigoBarras[1] === "7") {
                  tipoConta = "Multas de trânsito";
                }

                valor = parseFloat(codigoBarras.substr(4, 11)); // Valor ocupa 11 dígitos

                let valorFormatado = (parseInt(valor) / 100).toFixed(2);

                // Exibir informações no contêiner para verificação
                document.getElementById("codigoBanco").value = "--";
                document.getElementById("tipoConta").value = tipoConta;
                document.getElementById("dataVencimento").value = "--";
                document.getElementById("valor").value = valorFormatado;
                document.getElementById("codigoBarrasInfo").style.display =
                  "block";
                let trocof = troco - valorFormatado;
                document.getElementById("troco").value = trocof.toFixed(2);
              } else {
                console.log(codigoBarras);
                codigoBanco = codigoBarras.substring(0, 3);
                fatorVencimento = codigoBarras.substring(5, 9);
                valor = codigoBarras.substring(9, 19);
                console.log(fatorVencimento);
                // Formatar o valor
                let valorFormatado = (parseInt(valor) / 100).toFixed(2);

                // Converter o fator de vencimento para data
                const dataBase = new Date("1997-10-07");
                const vencimento = new Date(dataBase);
                vencimento.setDate(dataBase.getDate() + fatorVencimento + 1);
                console.log("passei aq");
                // Exibir informações no contêiner para verificação
                document.getElementById("codigoBanco").value = codigoBanco;
                document.getElementById("tipoConta").value = tipoConta;
                document.getElementById("dataVencimento").value =
                  vencimento.toLocaleDateString("pt-br");
                document.getElementById("valor").value = valorFormatado;
                document.getElementById("codigoBarrasInfo").style.display =
                  "block";
                let trocof = troco - valorFormatado;
                document.getElementById("troco").value = trocof.toFixed(2);
              }
            } else {
              alert("Código de barras inválido. Deve ter 44 dígitos.");
            }
          });

        // Edição da data de vencimento
        document
          .getElementById("editar-tipo")
          .addEventListener("click", function () {
            const tipoConta = document.getElementById("tipoConta");
            if (tipoConta.disabled) {
              tipoConta.disabled = false;
              tipoConta.focus();
            } else {
              tipoConta.disabled = true;
            }
          });
        document
          .getElementById("editar-data")
          .addEventListener("click", function () {
            const dataVencimentoInput =
              document.getElementById("dataVencimento");
            if (dataVencimentoInput.disabled) {
              dataVencimentoInput.disabled = false;
              dataVencimentoInput.focus();
            } else {
              dataVencimentoInput.disabled = true;
            }
          });

        // Adicionar pagamento manual
        document
          .getElementById("adicionarPagamentoManualBtn")
          .addEventListener("click", function () {
            const tipoConta = document.getElementById("tipoContaManual").value;
            const codigoBanco =
              document.getElementById("codigoBancoManual").value;
            const dataVencimento = document.getElementById(
              "dataVencimentoManual"
            ).value;
            const valor = document.getElementById("valorManual").value;

            if (tipoConta && codigoBanco && dataVencimento && valor) {
              adicionarPagamento(tipoConta, codigoBanco, dataVencimento, valor);
            } else {
              alert("Preencha todos os campos.");
            }
          });

        // Adicionar pagamento via PIX
        document
          .getElementById("btnRegistrarPagamentoPix")
          .addEventListener("click", function () {
            const valorPix = document.getElementById("valorPix").value;

            if (valorPix) {
              adicionarPagamento("PIX", "", "", valorPix);
            } else {
              alert("Preencha o valor do PIX.");
            }
          });

        // Confirmar dados do código de barras
        document
          .getElementById("confirmarDadosBtn")
          .addEventListener("click", function () {
            const tipoConta = document.getElementById("tipoConta").value;
            const codigoBanco = document.getElementById("codigoBanco").value;
            const dataVencimento =
              document.getElementById("dataVencimento").value;
            const valor = document.getElementById("valor").value;

            if (tipoConta && codigoBanco && dataVencimento && valor) {
              adicionarPagamento(tipoConta, codigoBanco, dataVencimento, valor);
              document.getElementById("codigoBarrasInfo").style.display =
                "none";
            } else {
              alert("Preencha todos os campos.");
            }
          });

        // Função para adicionar pagamento na tabela
        function adicionarPagamento(
          tipoConta,
          codigoBanco,
          dataVencimento,
          valor
        ) {
          const tableBody = document.getElementById("paymentTableBody");
          const row = document.createElement("tr");

          row.innerHTML = `
            <td>${tipoConta}</td>
            <td>${codigoBanco}</td>
            <td>${dataVencimento}</td>
            <td>${valor}</td>
          `;

          tableBody.appendChild(row);
        }

        // Registrar pagamentos
        document
          .getElementById("btnRegistrarPagamentos")
          .addEventListener("click", async function () {
            const tableBody = document.getElementById("paymentTableBody");
            const rows = tableBody.querySelectorAll("tr");
            const pagamentos = [];
            const troco = document.getElementById("troco").value;
            const observacao = document.getElementById("observacao").value;
            const id_cliente = "<%= malote.id_cliente %>";
            const id_funcionario = "<%= malote.id_funcionario %>";

            rows.forEach((row) => {
              const cols = row.querySelectorAll("td");
              const pagamento = {
                tipo_conta: cols[0].textContent,
                codigo_banco: cols[1].textContent,
                data_vencimento: cols[2].textContent,
                valor: cols[3].textContent,
              };
              pagamentos.push(pagamento);
            });

            try {
              const response = await fetch(
                `/processarMalote/<%= malote.id_malote %>`,
                {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({
                    pagamentos,
                    troco,
                    id_cliente,
                    id_funcionario,
                    observacao,
                  }),
                }
              );

              if (response.ok) {
                const data = await response.json();
                if (data.success) {
                    window.location.href = data.redirectUrl; // Redireciona para o perfil do cliente
                } else {
                    alert("Erro ao registrar pagamentOOOs: " + data.message);
                }
              } else {
                const errorData = await response.json();
                alert("Erro ao registrar pagamentoSSS: " + errorData.message);
              }
            } catch (error) {
              alert("Erro ao registrar pagamentossss: " + error.message);
            }
          });
      });
    </script>
  </body>
</html>
